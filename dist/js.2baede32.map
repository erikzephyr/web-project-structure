{"version":3,"sources":["js/index.js"],"names":["ROMAN_TABLE","ROMAN_TABLE_KEYS","Object","keys","reverse","fromNumber","value","Number","isInteger","Error","result","forEach","key"],"mappings":";AAiBO,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,gBAAA,EAjBP,IAAMA,EAAc,CACZ,KAAA,IACD,IAAA,KACA,IAAA,IACA,IAAA,KACA,IAAA,IACD,GAAA,KACA,GAAA,IACA,GAAA,KACA,GAAA,IACD,EAAA,KACA,EAAA,IACA,EAAA,KACA,EAAA,KAECC,EAAmBC,OAAOC,KAAKH,GAAaI,UAErCC,EAAa,SAACC,GACrBA,GAAAA,EAAQ,IAAMC,OAAOC,UAAUF,GAC3B,MAAA,IAAIG,MAAM,aAGdC,IAAAA,EAAS,GAONA,OANPT,EAAiBU,QAAQ,SAAAC,GAChBN,KAAAA,GAASM,GACdN,GAASM,EACTF,GAAUV,EAAYY,KAGnBF,GAZF,QAAA,WAAA","file":"js.2baede32.map","sourceRoot":"../src","sourcesContent":["const ROMAN_TABLE = {\n  1000: \"M\",\n  900: \"CM\",\n  500: \"D\",\n  400: \"CD\",\n  100: \"C\",\n  90: \"XC\",\n  50: \"L\",\n  40: \"XL\",\n  10: \"X\",\n  9: \"IX\",\n  5: \"V\",\n  4: \"IV\",\n  1: \"I\"\n};\nconst ROMAN_TABLE_KEYS = Object.keys(ROMAN_TABLE).reverse();\n\nexport const fromNumber = (value) => {\n  if (value < 0 || !Number.isInteger(value)) {\n    throw new Error('No number');\n  }\n\n  let result = '';\n  ROMAN_TABLE_KEYS.forEach(key => {\n    while (value >= key) {\n      value -= key;\n      result += ROMAN_TABLE[key];\n    }\n  });\n  return result;\n};\n\n"]}